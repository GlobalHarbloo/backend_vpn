package main

import (
	"log"
	"net/http"
	"vpn-backend/config"
	"vpn-backend/internal/db"
	"vpn-backend/internal/handlers"
	"vpn-backend/internal/repository"
	"vpn-backend/internal/services"

	"github.com/gorilla/mux"
)

func main() {
	// –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥
	cfg := config.Load()

	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
	err := db.Init(cfg)
	if err != nil {
		log.Fatalf("–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î: %v", err)
	}

	// –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
	userRepo := repository.NewUserRepository()

	// –°–µ—Ä–≤–∏—Å—ã
	authService := services.NewAuthService(userRepo)
	paymentService := services.NewPaymentService(userRepo)
	xrayService := services.NewXrayService(userRepo)

	// –•–µ–Ω–¥–ª–µ—Ä—ã
	userHandler := handlers.NewUserHandler(authService, paymentService)
	adminHandler := handlers.NewAdminHandler(userRepo)
	xrayHandler := handlers.NewXrayHandler(xrayService)

	// –†–æ—É—Ç–µ—Ä
	r := mux.NewRouter()

	// –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ä–æ—É—Ç—ã
	r.HandleFunc("/register", userHandler.Register).Methods("POST")
	r.HandleFunc("/login", userHandler.Login).Methods("POST")

	// –ê–¥–º–∏–Ω—Å–∫–∏–µ —Ä–æ—É—Ç—ã
	r.HandleFunc("/admin/users", adminHandler.GetAllUsers).Methods("GET")
	r.HandleFunc("/admin/ban/{id}", adminHandler.BanUser).Methods("POST")

	// Xray
	r.HandleFunc("/xray/restart", xrayHandler.Restart).Methods("POST")
	r.HandleFunc("/xray/reload", xrayHandler.ReloadConfig).Methods("POST")

	log.Println("üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ :8080")
	err = http.ListenAndServe(":8080", r)
	if err != nil {
		log.Fatalf("–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: %v", err)
	}
}
